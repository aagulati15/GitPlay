 /**********************************************************************

 Date   : September 2018
 Author : Yasmin Luetzelschwab
 Purpose: Toolbox for TASS application

 DESCRIPTION
 -----------
 Toolbox for TASS application. A Collection of
 stanard procedures. (see YTSTOOL.PLU for details)
 The error procedures have stubs inside this copy-
 book to generate the packagename automaticly.
 All procedures (except the error precedures) begin
 with YTSTOOL#.

 -----------------------------------------------------------------------
 MODIFICATION
 ------------
 CO: Christian Ott        (A158147)
 YL: Yasmin Luetzelschwab (A722485)
 CH: Christian Hirschi    (A336712)
 -----------------------------------------------------------------------

 -----------------------------------------------------------------------
 TASS000017:  DC 3/2020  14.08.2020
 -----------------------------------------------------------------------
 13.03.2020 | CO | remove isOnline because conflict with PUNIT
 -----------------------------------------------------------------------
 TASS000013:  DC 2/2020  08.05.2020
 -----------------------------------------------------------------------
 13.03.2020 | CO | add Is Online
 -----------------------------------------------------------------------
 TASS000007:  DC 4/2019  08.11.2019
 -----------------------------------------------------------------------
 16.09.2019 | CH | add traceReturn & traceSqlca
 14.10.2019 | CH | add traceText
 -----------------------------------------------------------------------
 TASS000005:  DC 3/2019  09.08.2019
 -----------------------------------------------------------------------
 21.05.2019 | CH | simplify getSSID
 -----------------------------------------------------------------------
 TASS000002:  DC 2/2019  10.05.2019
 -----------------------------------------------------------------------
 06.09.2018 | YL | Initial version
 -----------------------------------------------------------------------

 **********************************************************************/

 /*--- generally TASS definitions ------------------------------------*/
 %xinclude TSDEFS;

 /*--- TASS definitions ----------------------------------------------*/
 %xinclude YTSTOOLD;

 /*--- TASS entries --------------------------------------------------*/
 dcl YTSTOOL
   entry()
   abNormal
   suppress(unref);

 dcl YTSTOOL#resizeMsgInt
   entry(type TSDEFS#msg_T       inOut     asgn byAddr )
   returns(bit(1) aligned byValue)
   suppress(unref);

 dcl YTSTOOL#initTab
   entry(ptr                     inOut     asgn byAddr
        ,ptr                     inOnly nonAsgn byValue
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,bit(1) aligned          inOnly nonAsgn byValue
        ,type TSDEFS#version_T   inOnly nonAsgn byAddr
        ,type TSDEFS#return_T   outOnly    asgn byAddr
        ,ptr                     inOnly nonAsgn byValue
        )
   suppress(unref);

 dcl YTSTOOL#resizeTab
   entry(ptr                     inOut     asgn byAddr
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,ptr                     inOnly nonAsgn byValue
        )
   suppress(unref);

 dcl YTSTOOL#resizeTabHeap
   entry(ptr                     inOut     asgn byAddr
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,bin fixed(31)           inOut     asgn byAddr
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,ptr                     inOnly nonAsgn byValue
        )
   suppress(unref);

 dcl YTSTOOL#createHeap
   entry(bin fixed(31)          outOnly    asgn byAddr
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,ptr                     inOnly nonAsgn byValue
        )
   suppress(unref);

 dcl YTSTOOL#allocInHeap
   entry(bin fixed(31)           inOnly nonAsgn byValue
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,ptr                    outOnly    asgn byAddr
        ,ptr                     inOnly nonAsgn byValue
        )
   suppress(unref);

 dcl YTSTOOL#discardHeap
   entry(bin fixed(31)           inOut     asgn byAddr
        ,ptr                     inOnly nonAsgn byValue
        )
   suppress(unref);

 dcl YTSTOOL#traceMsgPart
   entry(type TSDEFS#msg_T       inOut     asgn byAddr
        ,char(*)                 inOnly nonAsgn byAddr
        )
   suppress(unref);

 dcl YTSTOOL#traceMsgNative
   entry(type TSDEFS#msg_T       inOnly nonAsgn byAddr
        ,bin fixed(31)           inOnly nonAsgn byAddr  optional
        )
   suppress(unref);

 dcl YTSTOOL#writeToQueue
   entry(type TSDEFS#msg_T       inOnly nonAsgn byAddr
        ,bin fixed(31)           inOnly nonAsgn byValue
        ,char(48)                inOnly nonAsgn byAddr
        ,type TSDEFS#return_T   outOnly    asgn byAddr
        )
   suppress(unref);

 dcl YTSTOOL#writeToFile
   entry(type TSDEFS#msg_T       inOnly nonAsgn byAddr
        ,char(16)                inOnly nonAsgn byAddr
        )
   suppress(unref);

 dcl YTSTOOL#doCommit
   entry(type TSDEFS#commit_T    inOnly nonAsgn byAddr
        ,type TSDEFS#return_T outOnly      asgn byAddr
        ,ptr                     inOnly nonAsgn byValue
        )
   suppress(unref);

 dcl YTSTOOL#getSSID
   entry()
   returns(char(4))
   suppress(unref);

 dcl YTSTOOL#traceReturn
   entry(char(*)              inOnly nonAsgn byAddr
        ,type TSDEFS#return_T inOnly nonAsgn byAddr
        )
   suppress(unref);

 dcl YTSTOOL#traceSqlca
   entry(char(*)             inOnly nonAsgn byAddr
        ,type TSDEFS#sqlca_T inOnly nonAsgn byAddr
        ,char(8)             inOnly nonAsgn byAddr
        ,char(80)            inOnly nonAsgn byAddr
        )
   suppress(unref);

 dcl YTSTOOL#traceText
   entry(char(*)  inOnly nonAsgn byAddr optional
        ,char(*)  inOnly nonAsgn byAddr
        )
   suppress(unref);

 /*--- Error procedure Stubs -----------------------------------------*/
 %dcl (COMPILETIME,SYSVERSION,QUOTE) builtin;

 /*--- Programm Error ------------------------------------------------*/
 YTSTOOL#pgmError:
   proc($return
       ,$reason
       )
   suppress(unref laxnested)
   options(noInline noDescriptor);

   dcl $return type TSDEFS#return_T outOnly    asgn byAddr;
   dcl $reason char(*) varying       inOnly nonAsgn byAddr;

   dcl YTSTOOL#pgmErrorInt
     entry(type TSDEFS#return_T     outOnly    asgn byAddr
          ,char(*) varying           inOnly nonAsgn byAddr
          ,char(*) varying           inOnly nonAsgn byAddr
          ,char(*) varying           inOnly nonAsgn byAddr
          ,bin fixed(31)             inOnly nonAsgn byValue
          )
     options(noDescriptor)
     suppress(unref);

   call YTSTOOL#pgmErrorInt($return
                           ,$reason
                           ,packagename()
                           ,QUOTE(COMPILETIME) || ' ' ||
                            QUOTE(SYSVERSION)
                           ,0
                           );

 end YTSTOOL#pgmError;

 /*--- DB2 Error -----------------------------------------------------*/
 YTSTOOL#db2Error:
   proc($sqlca
       ,$return
       ,$position
       ,$key
       )
   suppress(unref laxnested)
   options(noInline noDescriptor);

   dcl $sqlca    type TSDEFS#sqlca_T   inOnly nonAsgn byAddr;
   dcl $return   type TSDEFS#return_T outOnly    asgn byAddr;
   dcl $position char(*) varying       inOnly nonAsgn byAddr;
   dcl $key      char(*) varying       inOnly nonAsgn byAddr;

   dcl YTSTOOL#db2ErrorInt
     entry(type TSDEFS#sqlca_T         inOnly nonAsgn byAddr
          ,type TSDEFS#return_T       outOnly    asgn byAddr
          ,char(*) varying             inOnly nonAsgn byAddr
          ,char(*) varying             inOnly nonAsgn byAddr
          ,char(*) varying             inOnly nonAsgn byAddr
          ,char(*) varying             inOnly nonAsgn byAddr
          ,bin fixed(31)               inOnly nonAsgn byValue
          )
     options(noDescriptor)
     suppress(unref);

   call YTSTOOL#db2ErrorInt($sqlca
                           ,$return
                           ,$position
                           ,$key
                           ,packagename()
                           ,QUOTE(COMPILETIME) || ' ' ||
                            QUOTE(SYSVERSION)
                           ,0
                           );

 end YTSTOOL#db2Error;

 /*--- Abend procedure Stubs (implicitly signal error at the end) ----*/
 /*--- Programm Abend ------------------------------------------------*/
 YTSTOOL#pgmAbend:
   proc($reason)
   suppress(unref laxnested)
   options(noInline noDescriptor);

   dcl $reason char(*) varying       inOnly nonAsgn byAddr;

   dcl ret     type TSDEFS#return_T            asgn;

   dcl YTSTOOL#pgmErrorInt
     entry(type TSDEFS#return_T     outOnly    asgn byAddr
          ,char(*) varying           inOnly nonAsgn byAddr
          ,char(*) varying           inOnly nonAsgn byAddr
          ,char(*) varying           inOnly nonAsgn byAddr
          ,bin fixed(31)             inOnly nonAsgn byValue
          )
     options(noDescriptor)
     suppress(unref);

   call YTSTOOL#pgmErrorInt(ret
                           ,$reason
                           ,packagename()
                           ,QUOTE(COMPILETIME) || ' ' ||
                            QUOTE(SYSVERSION)
                           ,1
                           );

 end YTSTOOL#pgmAbend;

 /*--- DB2 Abend -----------------------------------------------------*/
 YTSTOOL#db2Abend:
   proc($sqlca
       ,$position
       ,$key
       )
   suppress(unref laxnested)
   options(noInline noDescriptor);

   dcl $sqlca    type TSDEFS#sqlca_T inOnly nonAsgn byAddr;
   dcl $position char(*) varying     inOnly nonAsgn byAddr;
   dcl $key      char(*) varying     inOnly nonAsgn byAddr;

   dcl ret       type TSDEFS#return_T          asgn;

   dcl YTSTOOL#db2ErrorInt
     entry(type TSDEFS#sqlca_T       inOnly nonAsgn byAddr
          ,type TSDEFS#return_T     outOnly    asgn byAddr
          ,char(*) varying           inOnly nonAsgn byAddr
          ,char(*) varying           inOnly nonAsgn byAddr
          ,char(*) varying           inOnly nonAsgn byAddr
          ,char(*) varying           inOnly nonAsgn byAddr
          ,bin fixed(31)             inOnly nonAsgn byValue
          )
     options(noDescriptor)
     suppress(unref);

   call YTSTOOL#db2ErrorInt($sqlca
                           ,ret
                           ,$position
                           ,$key
                           ,packagename()
                           ,QUOTE(COMPILETIME) || ' ' ||
                            QUOTE(SYSVERSION)
                           ,1
                           );

 end YTSTOOL#db2Abend;

 /*--- deactivate internal YEUTOOL entries----------------------------*/
 %deactivate COMPILETIME,SYSVERSION,QUOTE;